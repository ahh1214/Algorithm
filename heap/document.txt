* 우선순위 큐를 힙으로도 구현할 수 있음
  -> 삽입 시간 O(logN), 삭제 시간 O(logN)

* 힙의 특징
  - 힙은 완전 이진 트리 자료구조의 일종
  - 힙에서는 항상 루트 노드를 제거함

  1) 최소 힙(min heap)
	- 루트 노드가 가장 작은 값을 가짐
	- 따라서 값이 작은 데이터가 우선적으로 제거됨
  2) 최대 힙(max heap)
	- 루트 노드가 가장 큰 값을 가짐
	- 따라서 값이 큰 데이터가 우선적으로 제거됨

* 힙 라이브러리
//임포트 
import heapq
//최소 힙 생성 
 - heap = []
//힙에 원소 추가
  - heapq.heappush(heap, item)
//힙에 원소 삭제
  - heapq.heappop(heap)
//최소값 삭제 안하고 얻기
  - heap[0]

* 기존 리스트를 힙으로 변환
   - heapify() 함수 사용
 ex) heap = [4, 1, 7, 3, 8, 5]
      heap.heapify(heap)   # [1, 3, 5, 4, 8, 7]

* 최소힙에서 k번째 최소값 뽑기
   for i in range(k):
      kth_min = heapq.heappop(heap)